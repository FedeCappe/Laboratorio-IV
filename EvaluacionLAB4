const readline = require('readline');
const fs = require('fs');
const yargs = require('yargs');

// Crear la interfaz readline para interactuar con el usuario
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

// Usar yargs para manejar argumentos de la línea de comandos
const argv = yargs
  .option('file', {
    alias: 'f',
    description: 'Nombre del archivo para guardar los productos',
    type: 'string',
    default: 'productos.json'  // Valor por defecto si no se proporciona un nombre de archivo
  })
  .argv;

// Función para solicitar los datos del producto de manera asincrónica
const pedirDatos = () => {
  return new Promise((resolve) => {
    rl.question('Producto: ', (producto) => {
      rl.question('Precio: ', (precio) => {
        rl.question('Cantidad: ', (cantidad) => {
          resolve({ producto, precio: parseFloat(precio), cantidad: parseInt(cantidad) });
        });
      });
    });
  });
};

// Función para guardar los datos en el archivo JSON
const guardarDatos = async () => {
  const { producto, precio, cantidad } = await pedirDatos();  // Esperar los datos del usuario

  // Crear el objeto del producto
  const nuevoProducto = {
    nombre: producto,
    precio: precio,
    cantidad: cantidad
  };

  // Leer el archivo JSON existente (si existe) o crear un array vacío si no existe
  fs.readFile(argv.file, 'utf8', (err, data) => {
    let productos = [];

    if (!err && data) {
      productos = JSON.parse(data);  // Parsear el contenido del archivo si existe
    }

    // Agregar el nuevo producto al array
    productos.push(nuevoProducto);

    // Sobrescribir el archivo con el array actualizado
    fs.writeFile(argv.file, JSON.stringify(productos, null, 2), 'utf8', (err) => {
      if (err) {
        console.log('Error al guardar el archivo:', err);
      } else {
        console.log('Producto guardado correctamente.');
      }

      // Leer y mostrar el contenido del archivo JSON
      fs.readFile(argv.file, 'utf8', (err, data) => {
        if (err) {
          console.log('Error al leer el archivo:', err);
        } else {
          console.log('Contenido del archivo:', JSON.parse(data));
        }

        rl.close();  // Cerrar la interfaz readline al finalizar
      });
    });
  });
};

// Ejecutar la función para guardar los datos
guardarDatos();
